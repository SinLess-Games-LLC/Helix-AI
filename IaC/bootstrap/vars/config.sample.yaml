---
#
# Bootstrap configuration - config.yaml is gitignored
#
#############################################################
# system
#############################################################
system:
  # The DNS server to use for the cluster, this can be an existing local DNS server or a public one
  # If using a local DNS server make sure it meets the following requirements:
  #   1. your nodes can reach it
  #   2. it is configured to forward requests to a public DNS server
  #   3. you are not force redirecting DNS requests to it - this will break cert generation over DNS01
  dns_servers:
    - 1.1.1.1
    - 8.8.8.8
  extra_packages:
    - automake
    - autoconf
    - m4
  # The CIDR of the network your nodes are on (e.g. 192.168.1.0/24)
  cidr:
  # The IP address of the gateway on your network
  gateway_addr:
  # The IP address of the DNS server on your network  nameserver: 192.168.86.80
  nameserver:
  # Choose your timezone (e.g. America/New_York)
  timezone: America/Denver

#############################################################
# GitOps
#############################################################
gitops:
  # (Required) The github repository to use for the GitOps workflow
  github:
    # (Required) The github username or organization name
    username:
    repository:
      # (Required) The github repository name
      name:
      # (Optional) The github repository branch to use for flux,
      # (default: main)
      branch: main
  flux:
    # Flux github webhook token (openssl rand -hex 12)
    github_webhook_token: ''

#############################################################
# Encryption
#############################################################
encryption:
  # Age Public Key (e.g. age15uzrw396e67z9wdzsxzdk7ka0g2gr3l460e0slaea563zll3hdfqwqxdta)
  age_public_key: ''

#############################################################
# Cloudflare
#############################################################
cloudflare:
  # (Required) Cloudflare API Token (NOT API Key)
  #   1. Head over to Cloudflare and create a API Token by going to
  #      https://dash.cloudflare.com/profile/api-tokens
  #   2. Under the `API Tokens` section click the blue `Create Token` button.
  #   3. Click the blue `Use template` button for the `Edit zone DNS` template.
  #   4. Name your token something like `home-kubernetes`
  #   5. Under `Permissions`, click `+ Add More` and add each permission below:
  #      `Zone - DNS - Edit`
  #      `Account - Cloudflare Tunnel - Read`
  #   6. Limit the permissions to a specific account and zone resources.
  #   7. Click the blue `Continue to Summary` button and then the blue `Create Token` button.
  #   8. Copy the token and paste it below.
  token:
  # Cloudflared Account Tag (cat ~/.cloudflared/*.json | jq -r .AccountTag)
  account_tag:
  tunnels:
    # Cloudflare domain
    - # index needs to start at 1
      index: 1
      # Domain to use for the Cloudflared Tunnel (e.g. helixaibot.com)
      domain:
      # Cloudflared Tunnel Secret (cat ~/.cloudflared/*.json | jq -r .TunnelSecret)
      secret:
      # Cloudflared Tunnel ID (cat ~/.cloudflared/*.json | jq -r .TunnelID)
      id:
      #################################################################
      # SSL
      #################################################################
      ssl:
        # Email you want to be associated with the ACME account (used for TLS certificates via letsencrypt.org)
        acme_email:
        # Use the ACME production env when requesting the wildcard certificate,
        # the default here is `false` which means ACME staging env will be used instead.
        # This is to prevent being rate-limited. Update this option to `true` when you
        # have verified the staging certificate works and then re-run `task configure`
        # and push your changes to Github.
        acme_production_enabled: false

#############################################################
# Kubernetes
#############################################################
kubernetes:
  # The name of your cluster, this is used to name the cluster in the kubeconfig file
  # Must be a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.'
  cluster_name: ''
  # CIDR your nodes are on (e.g. 192.168.1.0/24)
  node_cidr:
  # The IP address of the Kube API, choose an available IP in your nodes network that is not being used
  # (Optional) Leave this blank if you are deploying a single master node, this will disable kube-vip in k3s
  # or keepalived in k0s and use the master node IP instead
  kube_api_addr:
  # The hostname of the Kube API, set this if you intend to call the Kube API by hostname rather than IP
  # (Optional) This is currently only utilized in k0s and is added to the Kube API cert sans
  # kubeapi_hostname:
  # The Load balancer IP for k8s_gateway, choose an available IP in your nodes network that is not being used
  k8s_gateway_addr:
  # The Load balancer IP for external ingress, choose an available IP in your nodes network that is not being used
  external_ingress_addr:
  # The Load balancer IP for internal ingress, choose an available IP in your nodes network that is not being used
  internal_ingress_addr:

  # (Advanced) For ipv6 use format 10.42.0.0/16,fd78:c889:47fb:10::/60
  # /60 IPv6 block is enough for 16 nodes
  cluster_cidr: 10.42.0.0/16
  # (Advanced) For ipv6 use format 10.43.0.0/16,fd78:c889:47fb:e0::/112
  service_cidr: 10.43.0.0/16

  # (Advanced) Path for openebs openebs-hostpath to use for storage on ALL nodes
  # (default is /var/openebs/local)
  local_storage_path: /var/openebs/local

#############################################################
# Proxmox
#############################################################
proxmox:
  # This is the ip address of the proxmox server
  ip:
  # This is the port of the proxmox server
  # (Advanced) If you are using a non-standard port for the proxmox api (default is 8006
  port:
  api_tokens:
    terraform:
      token_id:
      token_secret:
  # This is the node name of the proxmox server
  # (default is pve)
  node_name: 'pve'

#############################################################
# SSH
#############################################################
ssh:
  # This is the username to use for the ssh connection
  username: ''
  password:
    # This is the password to use for the ssh connection
    raw: ''
    # This is the encrypted password to use for the ssh connection
    # generaate using (openssl passwd -6 -salt $(openssl rand -hex 8) "password")
    encrypted: ''
  authorized_keys:
    # - ssh-ed25519 xxxxxxxxxxxxxxxxxxxx ********@google.com
    # - ssh-256 xxxxxxxxxxxxxxxxxxxx ********@google.com
  # This is the path to the private key to use for the ssh connection
  # it is recommended to place the ssh key in the .ssh folder of this repo
  # Make sure to app the file name to the gitignore file so that it is not uploaded to github
  private_key_file: ''
  # This is the path to the public key to use for the ssh connection
  # it is recommended to place the ssh key in the .ssh folder of this repo
  # Make sure to app the file name to the gitignore file so that it is not uploaded to github
  public_key_file: ''

#############################################################
# Bootstrap Nodes
#############################################################
bootstrap_nodes:
  # Use only 1, 3 or more odd master nodes, recommended is 3
  # Masters start at x.x.x.100
  master:
    # - id:        # Id of the master node vm
    #   name:      # name of the master node (must match [a-z0-9-]+)
    #   address:   # ip address of the master node
    #   username:  # ssh username of the master node
  # Workers start at x.x.x.150
  worker:
    # - id:        # Id of the worker node vm
    #   name:      # name of the worker node (must match [a-z0-9-]+)
    #   address:   # ip address of the worker node
    #   username:  # ssh username of the worker node
