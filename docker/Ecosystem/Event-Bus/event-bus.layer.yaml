services:
  init-kafka-topics: &init-kafka-topics
    image: bitnami/kafka:3.5
    entrypoint:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        until /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka-1:9093 --command-config /etc/kafka/config.properties; do sleep 5; done;
        echo "Kafka is ready now, start creating topics."
        echo "Seed kafka topic finished."
    volumes:
      - ./infra/kafka/config.properties:/etc/kafka/config.properties

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    volumes:
      - kafka_truststore:/bitnami/kafka/config/certs
    environment:
      KAFKA_BROKER_CONNECT: kafka-1:9093,kafka-2:9094,kafka-3:9095

  zookeeper:
    image: bitnami/zookeeper:3.5
    container_name: zookeeper
    ports:
      - '32181:32181'
      # - '32182:32182'
    volumes:
      - kafka_truststore:/bitnami/kafka/config/certs
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      # ZOO_SECURE_CLIENT_PORT: 32182
      # ZOO_SSL_CLIENT_ENABLE: "true"
      # ZOO_ENABLE_AUTH: "true"
      # ZOO_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/zookeeper.keystore.jks # zookeeper.keystore.jks
      # ZOO_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/zookeeper.truststore.jks
      # ZOO_SSL_KEYSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # ZOO_SSL_TRUSTSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360

  kafka-1:
    image: bitnami/kafka:3.5
    container_name: kafka-1
    ports:
      - '9093:9093'
    volumes:
      - kafka_truststore:/bitnami/kafka/config/certs
    environment:
      # KRaft settings
      KAFKA_KRAFT_CLUSTER_ID: buMdR0cTSrKhSCPkvISrKA
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9092,2@kafka-2:9093,3@kafka-3:9094
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # SSL settings
      # KAFKA_CFG_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-1.keystore.jks
      # KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-1.truststore.jks
      # KAFKA_CFG_SSL_KEYSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # Zookeeper
      KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ZOOKEEPER_PROTOCOL: PLAINTEXT

  kafka-2:
    image: bitnami/kafka:3.5
    container_name: kafka-2
    ports:
      - '9094:9094'
    volumes:
      - kafka_truststore:/bitnami/kafka/config/certs
    environment:
      # KRaft settings
      KAFKA_KRAFT_CLUSTER_ID: buMdR0cTSrKhSCPkvISrKA
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9092,2@kafka-2:9093,3@kafka-3:9094
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9093,CONTROLLER://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # SSL settings
      # KAFKA_CFG_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-2.keystore.jks
      # KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-2.truststore.jks
      # KAFKA_CFG_SSL_KEYSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # Zookeeper
      KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ZOOKEEPER_PROTOCOL: PLAINTEXT

  kafka-3:
    image: bitnami/kafka:3.5
    container_name: kafka-3
    ports:
      - '9095:9095'
    volumes:
      - kafka_truststore:/bitnami/kafka/config/certs
    environment:
      # KRaft settings
      KAFKA_KRAFT_CLUSTER_ID: buMdR0cTSrKhSCPkvISrKA
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9092,2@kafka-2:9093,3@kafka-3:9094
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9094,CONTROLLER://:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # SSL settings
      # KAFKA_CFG_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-3.keystore.jks
      # KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/kafka-3.truststore.jks
      # KAFKA_CFG_SSL_KEYSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: lhsdghzvuawnlh8suvjli2360
      # Zookeeper
      KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ZOOKEEPER_PROTOCOL: PLAINTEXT
