---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

env:
  ANSIBLE_VARS_ENABLED: 'host_group_vars'
  ANSIBLE_LOCALHOST_WARNING: 'False'
  ANSIBLE_INVENTORY_UNPARSED_WARNING: 'False'

vars:
  ANSIBLE_LINT_FILE: '{{.ANSIBLE_DIR}}/.ansible-lint'
  ANSIBLE_INVENTORY_FILE: '{{.ANSIBLE_DIR}}/inventory/hosts.yaml'
  ANSIBLE_REQUIREMENTS_FILE: '{{.ROOT_DIR}}/requirements.yaml'
  ANSIBLE_PIP_REQUIREMENTS_FILE: '{{.ROOT_DIR}}/requirements.txt'

tasks:
  deps:
    desc: Set up Ansible dependencies
    cmds:
      - python3 -m pip install --upgrade --requirement "{{.ANSIBLE_PIP_REQUIREMENTS_FILE}}"
      - ansible-galaxy install --role-file "{{.ANSIBLE_REQUIREMENTS_FILE}}" {{if eq .force "true"}}--force{{end}}
    preconditions:
      - {
          msg: 'Missing Ansible requirements file',
          sh: 'test -f {{.ANSIBLE_REQUIREMENTS_FILE}}',
        }
      - {
          msg: 'Missing Pip requirements file',
          sh: 'test -f {{.ANSIBLE_PIP_REQUIREMENTS_FILE}}',
        }
    sources:
      - '{{.ANSIBLE_REQUIREMENTS_FILE}}'
      - '{{.ANSIBLE_PIP_REQUIREMENTS_FILE}}'
    vars:
      force: '{{.force | default "true"}}'

  run:
    desc: Run an Ansible playbook for configuring a cluster
    summary: |
      Args:
        playbook: Playbook to run (required)
    prompt: Run Ansible playbook '{{.playbook}}'... continue?
    deps: ['deps']
    cmds:
      - 'ansible-playbook --inventory {{.ANSIBLE_INVENTORY_FILE}} {{.ANSIBLE_DIR}}/playbooks/{{.playbook}}.yaml {{.CLI_ARGS}}'
    requires:
      vars: ['playbook']
    preconditions:
      - {
          msg: 'Missing Ansible inventory file',
          sh: 'test -f {{.ANSIBLE_INVENTORY_FILE}}',
        }

  list:
    desc: List all the hosts
    deps: ['deps']
    cmd: 'ansible kubernetes --inventory {{.ANSIBLE_INVENTORY_FILE}} --list-hosts'
    preconditions:
      - {
          msg: 'Missing Ansible inventory file',
          sh: 'test -f {{.ANSIBLE_INVENTORY_FILE}}',
        }

  ping:
    desc: Ping all the hosts
    deps: ['deps']
    cmd: "ansible {{ .group }} --inventory {{.ANSIBLE_INVENTORY_FILE}} --one-line -m 'ping'"
    preconditions:
      - {
          msg: 'Missing Ansible inventory file',
          sh: 'test -f {{.ANSIBLE_INVENTORY_FILE}}',
        }
    requires:
      vars: ['group']

  uptime:
    desc: Uptime of all the hosts
    deps: ['deps']
    cmd: "ansible kubernetes --inventory {{.ANSIBLE_INVENTORY_FILE}} --one-line -a 'uptime'"
    preconditions:
      - {
          msg: 'Missing Ansible inventory file',
          sh: 'test -f {{.ANSIBLE_INVENTORY_FILE}}',
        }

  lint:
    desc: Lint Ansible
    deps: ['deps']
    cmd: 'ansible-lint --config-file {{.ANSIBLE_LINT_FILE}} {{.ANSIBLE_DIR}}/**/*.yaml'
    preconditions:
      - {
          msg: 'Missing Ansible lint file',
          sh: 'test -f {{.ANSIBLE_LINT_FILE}}',
        }
  
  deploy:
    desc: Deploy the cluster
    deps: ['deps']
    cmds:
      - echo "Starting deployment..."
      - ./scripts/countdown.sh 5
      - 'task ansible:ping group=pihole'
      - ./scripts/countdown.sh 5
      #- 'ansible-playbook --inventory {{.ANSIBLE_INVENTORY_FILE}} {{.ANSIBLE_DIR}}/playbooks/home-dns-installation.yaml {{.CLI_ARGS}}'
      - echo "Home DNS is ready..."
      - echo "Preparing cluster for installation..."
      - ./scripts/countdown.sh 5
      - 'task ansible:ping group=kubernetes'
      #- 'ansible-playbook --inventory {{.ANSIBLE_INVENTORY_FILE}} {{.ANSIBLE_DIR}}/playbooks/cluster-prepare.yaml {{.CLI_ARGS}}'
      - echo "Cluster is ready for installation..."
      - ./scripts/countdown.sh 10
      - 'ansible-playbook --inventory {{.ANSIBLE_INVENTORY_FILE}} {{.ANSIBLE_DIR}}/playbooks/cluster-installation.yaml {{.CLI_ARGS}}'
      - echo Waiting for nodes to be ready...
      - ./scripts/countdown.sh 100
      - kubectl get nodes
      - 'flux check --pre'
      - 'task flux:bootstrap'